<!DOCTYPE html>
<HTML>
<HEAD>
    <TITLE>VerseNotes</TITLE>
    <META http-equiv="Content-Type" content="text/html; charset=gb2312">

    <link rel="stylesheet" type="text/css" href="./css/Default_pad.css">

    <script language="javascript" src="./jq/jquery.js"></script>
	
	<script language="javascript" src="./jq/MyCookies.js"></script>
	



	
	
    <script language="javascript" src="BiblePad-2015.js"  type="text/javascript"></script>
    <script language="javascript" src="BiblePadUtils-2015.js"  type="text/javascript">
    </script>
<style>
body {
    background-color: black;
    color: white;

	
}



input{
    font-size:60px;
    height:92px;

   
  	position:relative;
	top:60px; 
   }
#MenuContainer{
   position:fixed;
   top:5px;
   right:5px;

}

#selFontsize, #edit_op, #selFilesList, #voiceinput, #BibleVersions, button{
   float:right;
   font-size:60px;
   
   	padding:0 0 0 0px;
	margin: 0px 2px 0px 2px;
	z-index:100;
}
#edit_op{
   align: right;
   right:0px;
   width:200px;
}
#selFontsize{
	right:200px;
}
#selFilesList{
	right:400px;
}
#voiceinput{
 width:90%;
 height:570px;
 overflow:scroll;

}

.mainmenulayer{
   padding: 0px 0px 0px 0px;
   margin:  0px 0px 0px 0px;
   
   width: 100%;
   height:100%;

}
#div_edit{
	background-color:#123000;
	border: 2px solid #0000f0;
	

	word-wrap:yes;
	white-space: wrap;
   word-wrap: break-word;
}
#verse{
	background-color:#000333;
}

#div_edit_Code{
	position:relative;
	top:360px;
	height:300px;
}

#tbContainer{
	width:100%;
}

#cright{
 height:700px;
	}
</style>    
    
    <script language="javascript">
    if (navigator.cookieEnabled){
	   console.log("document.cookie:"+document.cookie);
    }else{
	   alert("cookieEnabled OFF");
	}
	
	
	
	
	
	

function ShowDate() { 
  var now = new Date(); 
  var mm="0"+(now.getMonth()+1);
  var dd="0"+now.getDay();
  var then = now.getFullYear()+'-'+mm+'-'+dd; 
  
   
  alert("today:"+'\n\n\n'+then); 
  return then;
} 
//ShowDate();

function save_edit(){
	var oldtxt=$("#div_edit").attr("oldtxt");
	var txt = get_edit_txt();
	if(oldtxt===txt){
		if(!confirm(txt.length+"(B)\n\nNo changes is found\n\nForce to save?!")){
		    return;
		}
	}
	else if(!confirm(txt.length+"(B)\n\nSave?!" )){
		return;
	}
	save_edit_start(txt,"dlg");
}
function get_edit_txt(){	
	var txt=$("#div_edit").html();
	var mode=$("#div_edit").attr("mode");
	if(mode==="code"){
		txt=$("#div_edit").text();
	}
	return txt;
}
function save_edit_start(txt, cmdMode){	
	txt=encodeURIComponent(txt);
	var file=$("#selFilesList").val();
	$.ajax({
                  url: AjxUrl.MyNotesSave, 
                  data: "txt="+txt+"&BCVid="+file,
                  type: 'post',
                  success: function(ret) {
					if(cmdMode==="dlg") {
						alert(ret);
					}
					else if(cmdMode==="voiceInput") {
						voiceInput_add(ret);
					}else{
					    alert("cmd mode err");
					}
					$("#div_edit").attr("oldtxt",txt);
					text_statistic();
                  },
                  complete:function(ret,err){
                  }
        });
}

function read_diary(fname){

	$.ajax({
                  url: AjxUrl.MyNotesRead, 
                  data: "BCVid="+fname,
                  type: 'post',
                  success: function(ret) {
                    //alert(ret);
					if(ret.indexOf("Invalid")>=0){
						alert("Sorry, need login first.");
						window.history.back();
						return;
					}
					$("#div_edit").html(ret).attr("oldtxt",ret);
					text_statistic();
					//document.getElementById("div_edit").scrollIntoView();
                  },
                  complete:function(ret,err){
                  }
                });
}
function gen_FileOptions(){
	$.ajax({
                  url: "../svc/BoP/MyVerseNotes/MyVerseNotes.FileOptions.svc.php", 
                  data: "fname=1",
                  type: 'post',
                  success: function(ret) {
						//alert(ret);
					$("#selFilesList").append(ret);

					var fname=MyCookies.get("versId","");
					$("#selFilesList").val(fname);
					read_diary(fname);
					GetBibleVerse();

					
                  },
                  complete:function(ret,err){
                  }
                });
}	
	
function File_Cmds(cmd){
	var div_edit="#div_edit";
		switch(cmd){
			case "save": save_edit();
			break;
			case "clear":
			if(confirm("Clear edit text?!")){
				$(div_edit).empty();
			}
			break;	
			case "ul_list":
			   var ht=$(div_edit).html();
			   ht+="<ul><li>aaa</li><li>bbb</li></ul><br/>";
			   $(div_edit).html(ht);
			break;
			case "ol_list":
			   var ht=$(div_edit).html();
			   ht+="<ol><li>aaa</li><li>bbb</li></ol><br/>";
			   $(div_edit).html(ht);
			break;
			case "ViewCode":
			   //var ht=$("#div_edit").html();
			   //$("#div_edit").text(ht);
			   
			   var mode = $(div_edit).attr("mode");
			   if(mode==="code"){
				  var ht=$(div_edit).text();
				  $(div_edit).html(ht).attr("mode","").css("background-color","");
			   }else{
				  var ht=$(div_edit).html();
				  $(div_edit).text(ht).attr("mode","code").css("background-color","#666600");
			   }
			   
			break;
			case "ViewText":
			   var ht=$(div_edit).text();
			   $(div_edit).html(ht);
			break;
			case "htm_BR":
			   var ht=$(div_edit).html();
			   ht+="<br/>";
			   $(div_edit).html(ht);
			break;
			case "htm_HR":
			   var ht=$(div_edit).html();
			   ht+="<hr/><br/>";
			   $(div_edit).html(ht);
			break;
			case "htm_test":
					test();
			break;
		}	
}	

$(function() {
    var e = $.Event('keypress');
    e.which = 65; // Character 'A'
	$('div_edit2').focus();
    $('div_edit2').trigger(e);
	//alert();
});	
function test(){

};	
      function pressChar(elmID, char)
      {
        try
        {
          // Create the key press event.
          var pressEvent = document.createEvent('KeyboardEvent');
          pressEvent.initKeyEvent("keypress", true, true, window, 
                                    false, false, false, false, 
                                    0, char.charCodeAt(0));
 
          var input = document.getElementById(elmID); // Get the element where you want to press.
 
          input.dispatchEvent(pressEvent); // Press the key.
        }
        catch (e) {
            alert ("Your browser does not support this example!");
			console.log(e);
        }
      }	
function GetBibleVerse(bookver, BCVid){
    var bookver=$("#BibleVersions").val();
	if(bookver.length==0) return;
	var BCVid=$("#selFilesList").val();
	if(BCVid.length==0) return;
	console.log("BookverID:"+bookver+",BCVid:"+BCVid);
	$.ajax({
                  url: AjxUrl.BookChapterVerse, 
                  data: {BookverID:bookver, BCVid:BCVid},
                  type: 'post',
                  success: function(ret) {
                    $("#verse").text(ret);
                  },
                  complete:function(ret,err){
				    console.log("GetBibleVerse ret:"+err);
					console.log(ret);
                  }
                });
}
	
$(document).ready(function(){
//body_onload();

    $("#myin").keypress(function(e){
		console.log(e);
	});
	
    $("#div_edit2").mousemove(function(){
		console.log("mousemove");
		//pressChar("div_edit2",'A');
		//test();
	});
	
    $("#selFilesList").change(function(){
        var fname = $(this).val();
		if(fname.length>0){
			MyCookies.set("versId",fname,77);
			GetBibleVerse();
			read_diary(fname);
		}
    });
	$("#BibleVersions").change(function(){
        var BibleVersions = $(this).val();
		if(BibleVersions.length>0){
			MyCookies.set("BibleVersions",BibleVersions,77);
			//var vers=I[fname];
			//$("#verse").text(vers);
		    GetBibleVerse();
		}
		//read_diary(fname);
    });
	
	
	$("#selFontsize").change(function(){
        var fontsize = $(this).val();
		MyCookies.set("fontsize",fontsize,77);
		$(".mainmenulayer").css("font-size",fontsize);
    });
	$("#edit_op").change(function(){
		var sel=$(this).val();
		$(this).val("?");
		File_Cmds(sel);
    });
	
	var BibleVersions=MyCookies.get("BibleVersions","CUVs");
	$("#BibleVersions").val(BibleVersions);
	

	
	gen_FileOptions();


	
	
	var fontsize=MyCookies.get("fontsize","60px");
	$("#selFontsize").val(fontsize);
	$(".mainmenulayer").css("font-size",fontsize);

    
	
	    
 
	$("#voiceinput").keyup(function(){
		//var txt=$(this).val();
		//voiceInputParser(txt);
		if(!voiceInputRunWatchdog_setInterval){
			voiceInputRunWatchdog_setInterval=setInterval(voiceInputRun, 1000);
		}
		voiceInputRunWatchdog=1;
	}).change(function(){
		//voiceInputParser(txt);
		voiceInputRunWatchdog=2;
	}).blur(function(){
		if(voiceInputRunWatchdog_setInterval){
			clearInterval(voiceInputRunWatchdog_setInterval);
			voiceInputRunWatchdog_setInterval=null;
			$("#watchDog").text("+");
		}
	});
	
	//document.getElementById("voiceinput").scrollIntoView();
	
	//setInterval(voiceInputRun, 1000);
	
	$("button").click(function(){
		var cmd=$(this).text();
		cmd = "input "+cmd;
		voiceInput_add(cmd);
		voiceInputParser();
		$("#voiceinput").focus();
	});
	

});
var voiceInputRunWatchdog=9;
var voiceInputRunWatchdog_setInterval=null;
function voiceInputRun(){
	$("#watchDog").text(voiceInputRunWatchdog);
	if(voiceInputRunWatchdog>0){
		voiceInputRunWatchdog--;
		return;
	}

	voiceInputParser();
}
function getRegExp(str){
	var inpstr="[I|i]nput ";
	var regstr=inpstr+str;
	var reg = new RegExp(regstr, "g")  //"/" + str + "/g";
	return reg;
}
function voiceInputParser(){
	var txt=$("#voiceinput").val();
	var ret = txt.indexOf("ok");
	

	 
	if( txt.match( getRegExp("ok$") ) ){
		txt=txt.replace(getRegExp("ok$"), '.');
		var txt2=$("#div_edit").html();
		$("#div_edit").html(txt2+" "+txt);
		voiceInput_set("");
	}
	if( txt.match(getRegExp("space$")) ){
		txt=txt.replace(getRegExp("space$"), ' ');
		voiceInput_set(txt);
	}
	
	if( txt.match(/[C|c]lea[r|n]$/g) ||
	    txt.match( getRegExp("clear (the|this|out) text$") ) 
	){
		//if(confirm(CMD_CLEAR_THE_INPUT_TEXT+"?!")){
		   voiceInput_set("");
		//}
	}

	if( txt.match(getRegExp("go back$") ) ){
		txt=txt.replace(getRegExp("go back$"), "" );
		txt=txt.trim();
		var ar = txt.split(" ");
		txt="";
		for(var i=0;i<ar.length-1;i++){
			txt+=ar[i]+" ";
		}
		//txt=txt.trim();
		voiceInput_set(txt);
	}
	if( txt.match(/go back$/) ){
		txt=txt.replace(/go back$/, "" );
		txt=txt.trim();
		var ar = txt.split(" ");
		txt="";
		for(var i=0;i<ar.length-1;i++){
			txt+=ar[i]+" ";
		}
		//txt=txt.trim();
		voiceInput_set(txt);
	}
	
	if( txt.match(getRegExp("backspace$")) ) {
		txt=txt.substr(0, txt.length-16);
		voiceInput_set(txt);
	}	
	else if( txt.match(/backspace$/g) ) {
		txt=txt.substr(0, txt.length-11);
		voiceInput_set(txt);
	}

	
	var regex=getRegExp("go back number ([0-9]{1,})$") ;
	var arr=txt.match(regex);
	if( arr ){
		txt=txt.replace( regex, "" );
		txt=txt.trim();
		
		var ret=""+arr.join("");
		ret=ret.match(/[0-9]{1,}/g) ;
		var gobackNum = parseInt(ret);
		var ar = txt.split(" ");
		txt="";
		for(var i=0;i<ar.length-gobackNum;i++){
			txt+=ar[i]+" ";
		}
		voiceInput_set(txt);
	}

	if( txt.match(getRegExp("horizontal bar")) ){
		//txt=txt.replace(getRegExp("horizontal bar"), "<hr/><br/>");
		voiceInput_set("");
		var txt2=$("#div_edit").html();
		$("#div_edit").html(txt2+"<hr/><br/>");
	}
	if( txt.match(getRegExp("horizontal break$")) ){
		//txt=txt.replace(getRegExp("horizontal break"), "<br/>");
		voiceInput_set("");
		var txt2=$("#div_edit").html();
		$("#div_edit").html(txt2+"<br/>");
	}

	
	if( txt.match(getRegExp("save (a|the|this|to) file$")) ||
		txt.match(/save$/g)  ||
		txt.match(/save file$/g)  ||
		txt.match(/save (a|the|this|to) file$/g) ){
		//save_edit();
		voiceInput_save_the_file();
		voiceInput_save_the_file_State=1;
	}	
	if( 1===voiceInput_save_the_file_State ){
		//voiceInput_save_the_file();
		voiceInput_save_the_file();
	}
	//save_edit();
	console.log(txt);
}
var voiceInput_save_the_file_State=0;
function  voiceInput_save_the_file(){
	var vi=$("#voiceinput").val();
	if( !vi.match(/Save\(yes\|no\)\?\!/) ){
		var oldtxt=$("#div_edit").attr("oldtxt");
		var txt = get_edit_txt();
		var ss="\n\n";
		if(oldtxt===txt){
			ss += txt.length+"(B)\n\nNo changes is found\n\nForce to Save(yes|no)?! ";		    
		}
		else{
			ss +=txt.length+"(B)\n\nSave(yes|no)?! " ;
		}
		voiceInput_add(ss);
	}
	else {
		if( vi.match(/[ ]{1,}[Y|y]es$/) ){
			voiceInput_set("\nStart to save...\n\n");
			var txt = get_edit_txt();
			save_edit_start(txt, "voiceInput");
			voiceInput_save_the_file_State=0;
		}
		else if( vi.match(/[ ]{1,}[^\|][N|n]o$/) ) {
			voiceInput_set("\nNo action!\n");
			voiceInput_save_the_file_State=0;
		}
	}
}
function  voiceInput_add(msg){
	var vi=$("#voiceinput").val();
	$("#voiceinput").val(vi+msg);
	
	//scroll2bottom
	var ta = document.getElementById('voiceinput');
	ta.scrollTop = ta.scrollHeight;
}	
	
function  voiceInput_set(txt){
	$("#voiceinput").val(txt);
	//scroll2bottom
	var ta = document.getElementById('voiceinput');
	ta.scrollTop = ta.scrollHeight;
}		
	
function text_statistic(){
	var txt=$("#div_edit").text();
	var arr=txt.split(" ");
	var ss="<hr/>total words:"+arr.length+", size(B):"+txt.length
	$("#datetimeinfo").html(new Date()+ss);
}
    </script>

</HEAD>
    <BODY xxxonload="body_onload();">
    <div id="MenuContainer">
		  <select id='edit_op'>
				<option value="?">File</option> 
                <option value="save">save</option>
				<option value="ViewCode">viewCode</option>

                <option value="clear">clear</option>
				<option value="ul_list">ul list</option>
				<option value="ol_list">ol list</option>
				<option value="htm_BR">break(br)</option>
				<option value="htm_HR">horiz(hr)</option>
				<option value="htm_test">test</option>
			</select>	
       <select  id="selFontsize">
                <option value="10px">10px</option> 
                <option value="20px">20px</option>
                <option value="30px">30px</option>
                <option value="60px" >60px</option>
                <option value="75px">75px</option> 
                <option value="90px">90px</option>
                <option value="100px">100px</option> 
                <option value="120px">130px</option> 
                <option value="150px">150px</option> 
                <option value="200px">200px</option> 
          </select> 
			<select id='BibleVersions'>
				<option value="NIV"  >NIV</option>
				<option value="KJV"  >KJV</option>
				<option value="BBE"  >BBE</option>
				<option value="CUVs" >CUVs</option>
				<option value="CUVpy">CUVpy</option>
				
		  </select>
 	      <select  id="selFilesList"></select>
	</div>
<hr/>
<br/><br/><br/><br/><br/><p id='datetimeinfo'>...</p>  
<hr/>
<table id='tbContainer'><caption>Verse Notes</caption>
<tr><td>
		<div class="mainmenulayer" id='verse'>
        </div>
	
</td></tr><tr><td>
		  
		<div class="mainmenulayer" id='div_edit' contenteditable='true'>
        </div>
		





</td></tr><tr><td>

<button id="watchDog">+</button>
<textarea id="voiceinput" class="mainmenulayer"></textarea>

</td></tr><tr><td>

<button>horizontal bar</button>
<button>horizontal break</button>
<button>save the file</button>
<button>go back</button>
<button>backspace</button>
<button>clear the text</button>
<button>ok</button>
<button>space</button>

</td></tr><tr><td>
<ul>
<li>"Comma"ˈ/kämə/ [Inserts a comma.]
</li><li>"Period" /pirēəd/[Inserts a period followed by a space.]
</li><li>"Point" [Inserts a period when used within appropriate context, such as "Android two point two."]
</li><li>"Exclamation point" or "exclamation mark" [Inserts an exclamation point.]
</li><li>"Question mark" [Inserts a question mark.]
</li><li>"Colon" /ˈkōlən/[Inserts a colon.]
</li><li>"Smiley face" [Inserts a :-) smiley face.]
</li><li>"Sad face" [Inserts a :-( frowny face.]
</li><li>"Wink wink" /wiNGk/ [Inserts a ;-) winky face.]
 
 </li>
 </ul>
</td></tr></table>
<hr/>



<hr/>
	    <p id='info'>...</p>		
		<p id='cright'>@</p>		

    </BODY>


</HTML>
